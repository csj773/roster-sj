name: Update Roster

# 1. 스케줄링 + 수동 실행 가능
on:
  schedule:
    - cron: "0 * * * *"    # 매 시간 0분마다 실행
  workflow_dispatch:        # 수동 실행 가능

# 2. 권한 설정
permissions:
  contents: write          # repo에 push 가능

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 3. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 4. Node.js 설치
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 5. 의존성 설치
      - name: Install dependencies
        run: npm install

      # 6. roster.js 실행
      - name: Run roster.js
        env:
          CHROME_PATH: "/usr/bin/chromium-browser"  
          INPUT_PDC_USERNAME: ${{ secrets.PDC_USERNAME }}
          INPUT_PDC_PASSWORD: ${{ secrets.PDC_PASSWORD }}
          INPUT_FIREBASE_UID: ${{ secrets.FLUTTERFLOW_UID }}
          INPUT_ADMIN_FIREBASE_UID: ${{ secrets.FIRESTORE_ADMIN_UID }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        run: node -r dotenv/config roster.js

      # 7. 변경된 roster 파일 commit & push
      - name: Commit & Push roster.json & roster.csv
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/roster.json public/roster.csv
          git commit -m "Update roster data" || echo "No changes to commit"
          git push
